---
- name: Install WSL-specific packages
  apt:
    name: "{{ wsl_specific_packages }}"
    state: present
    update_cache: yes
  become: yes

- name: Setup GitHub CLI repository
  block:
    - name: Add GitHub CLI repository key
      get_url:
        url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
        dest: /usr/share/keyrings/githubcli-archive-keyring.gpg
        mode: '0644'
      become: yes

    - name: Add GitHub CLI repository
      apt_repository:
        repo: "deb [arch={{ ansible_architecture }} signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
        filename: github-cli
        state: present
      become: yes

    - name: Install GitHub CLI
      apt:
        name: gh
        state: present
        update_cache: yes
      become: yes

  rescue:
    - name: GitHub CLI installation failed
      debug:
        msg: "GitHub CLI installation failed - continuing without it"
  
  when: features.github_cli | default(true)

- name: Configure WSL settings
  template:
    src: wsl.conf.j2
    dest: /etc/wsl.conf
    owner: root
    group: root
    mode: '0644'
  become: yes

- name: Check if npiperelay already exists
  stat:
    path: "{{ npiperelay.install_path }}"
  register: npiperelay_exists

- name: Download and install npiperelay
  shell: |
    if [ ! -f "{{ npiperelay.install_path }}" ]; then
      echo "Installing npiperelay..."
      cd /tmp
      curl -L -o npiperelay.zip "{{ npiperelay.url }}" || exit 1
      unzip -o npiperelay.zip || exit 1
      sudo cp npiperelay.exe "{{ npiperelay.install_path }}" || exit 1
      sudo chmod +x "{{ npiperelay.install_path }}" || exit 1
      rm -f npiperelay.zip npiperelay.exe
      echo "npiperelay installed successfully"
    else
      echo "npiperelay already exists"
    fi
  args:
    creates: "{{ npiperelay.install_path }}"
  ignore_errors: yes
  when: not npiperelay_exists.stat.exists

- name: Add BROWSER environment variable to shell configuration
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: 'export BROWSER="wslview"'
    regexp: '^export BROWSER='
    state: present
    create: yes

- name: Display GitHub CLI setup instructions
  debug:
    msg:
      - "=== GitHub CLI Setup ==="
      - "To authenticate with GitHub after installation:"
      - "1. Run: gh auth login"
      - "2. Select: GitHub.com → HTTPS → Yes → Login with a web browser"
      - "3. Follow the browser instructions"
  when: features.github_cli | default(true)
